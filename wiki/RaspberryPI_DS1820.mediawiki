== How to use DS18x20 1-wire temperature sensors with the Raspberry PI  ==

The Raspberry PI (rPI) has several different serial buses brought out on its GPIO (General Purpose Input/Output) pins, including SPI and I<sup>2</sup>C, however there is no 1-Wire interface. Luckily, in modern Linux Kernels there is a driver module for bit-banging a 1-Wire interface using a single GPIO pin. In recent [http://www.raspbian.org/ Raspbian “wheezy”] releases GPIO-4 is the pin used. The rest of this article will describe how to use this module and connect DS18x20 series 1-Wire temperature sensors to the rPI.<br> 

I built my breakout interface directly onto a plastic pin header for testing purposes, but this is hardly the best way to do it.<br> 

----

== Hardware  ==

<br>To interface a DS18x20 sensor to the rPI, the bare minimum hardware you need is a single 4.7K resistor, the DS18x20 sensor and a plug that will fit the rPI GPIO pins. The wiring diagram is show below, along with a some photographs of the parts I soldered together for this experiment. I used a now-obsolete DS1820 sensor, but modern Ds18s20 and DS18b20 will work the same way (and offer more features and more precise temperature readings). 

I built my breakout interface directly onto a plastic pin header for testing purposes, but this is hardly the best way to do it.<br> 

<br> 

<gallery caption="DS1820 1-wire sensor on Raspberry PI - Click Image for larger version" perrow="3" widths="200px">
File:Fritzing_rPI_DS1820.png|Cartoon schematic of DS1820 connections to a Raspberry PI. 
File:RPI-ds1820.jpg|1-Wire interface for Raspberry PI build on a pin-header. 
File:RPI-DS1820.jpg|Interface mounted on Raspberry PI GPIO pins
</gallery> 

== Software  ==

The 1-Wire drivers are not loaded by default when the rPI boots. You can load them with the following commands from a command prompt:<br> 
<pre>pi@raspberrypi:~$ sudo modprobe wire

pi@raspberrypi:~$ sudo modprobe w1-gpio

pi@raspberrypi:~$ sudo modprobe w1-therm </pre> 
Connect the sensor hardware to the rPI and check it is detected by seeing if a device is listed on the 1-Wire bus. 
<pre>pi@raspberrypi:~$ cat /sys/bus/w1/devices/w1_bus_master1/w1_master_slave_count

1 
</pre> 
This will print the number of sensors detected, 1 - for my hardware at the moment. You can get the sensor ID (a hexadecimal string stored in ROM on the sensor chip) by reading the w1_master_slaves file: 
<pre>pi@raspberrypi:~$ cat /sys/bus/w1/devices/w1_bus_master1/w1_master_slaves

10-00080234149b </pre> 
A quick check for correct operation of the sensor is to "read" the sensor file, you'll need the hex ID of the sensor from earlier commands 
<pre>pi@raspberrypi:~$ cat /sys/bus/w1/devices/10-00080234149b/w1_slave

37 00 4b 46 ff ff 07 10 1e&nbsp;: crc=1e YES

37 00 4b 46 ff ff 07 10 1e t=27312 </pre> 
The number after 't=' is the temperature in mili-degrees Celsius. 

Unfortunately, at the time of wiring this article (December 2012) the very useful [http://owfs.org/ OWFS] (OneWire File System) software is incompatible with the w1-gpio kernel drivers, so you can't yet use the nice owfs tools to explore and retrieve data from sensors connected to the rPI this way. 

&nbsp; 

== Extra stuff  ==

[[Image:DS1820.png|thumb|200px]] 

[[Category:Projects]] [[Category:Experiments]] [[Category:Computer]] [[Category:Electronics]] [[Category:RaspberryPI]] [[Category:HowTo]]